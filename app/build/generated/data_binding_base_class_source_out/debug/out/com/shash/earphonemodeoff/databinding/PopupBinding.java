// Generated by view binder compiler. Do not edit!
package com.shash.earphonemodeoff.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.shash.earphonemodeoff.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialButton materialButton;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView6;

  private PopupBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull ConstraintLayout constraintLayout3, @NonNull View divider,
      @NonNull MaterialButton materialButton, @NonNull TextView textView10,
      @NonNull TextView textView6) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.constraintLayout3 = constraintLayout3;
    this.divider = divider;
    this.materialButton = materialButton;
    this.textView10 = textView10;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.materialButton;
      MaterialButton materialButton = ViewBindings.findChildViewById(rootView, id);
      if (materialButton == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new PopupBinding((ConstraintLayout) rootView, cardView, constraintLayout3, divider,
          materialButton, textView10, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
